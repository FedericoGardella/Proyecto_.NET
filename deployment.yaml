apiVersion: v1
kind: ConfigMap
metadata:
  name: nginx-config
data:
  nginx.conf: |
    events {
      worker_connections 1024;
    }

    http {
      server {
        listen 80;

        location /administrativo/ {
          proxy_pass http://administrativoservice-service:8080;
        }

        location /autenticacion/ {
          proxy_pass http://autenticacionservice-service:8080;
        }

        location /gestion-citas/ {
          proxy_pass http://gestioncitasservice-service:8080;
        }

        location /historias-clinicas/ {
          proxy_pass http://historiasclinicaservice-service:8080;
        }

        location /portal-paciente/ {
          proxy_pass http://portalpacienteservice-service:8080;
        }

        location /gestion-usuarios/ {
          proxy_pass http://gestionusuariosservice-service:8080;  # Corrigido: eliminado espacio
        }
        
      }
    }

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nginx
spec:
  replicas: 1
  selector:
    matchLabels:
      app: nginx
  template:
    metadata:
      labels:
        app: nginx
    spec:
      containers:
      - name: nginx
        image: nginx:latest
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 80
        volumeMounts:
        - name: nginx-config-volume
          mountPath: /etc/nginx/nginx.conf
          subPath: nginx.conf
      volumes:
      - name: nginx-config-volume
        configMap:
          name: nginx-config

---
apiVersion: v1
kind: Service
metadata:
  name: nginx-service
spec:
  type: LoadBalancer
  ports:
  - port: 80
    targetPort: 80
  selector:
    app: nginx

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: sqlserver
spec:
  replicas: 1
  selector:
    matchLabels:
      app: sqlserver
  template:
    metadata:
      labels:
        app: sqlserver
    spec:
      containers:
      - name: sqlserver
        image: mcr.microsoft.com/mssql/server:2019-latest
        ports:
        - containerPort: 1433
        env:
        - name: SA_PASSWORD
          value: "P45w0rd.N3T"
        - name: ACCEPT_EULA
          value: "Y"
        volumeMounts:
        - name: mssql-data
          mountPath: /var/opt/mssql
      volumes:
      - name: mssql-data
        persistentVolumeClaim:
          claimName: mssql-pvc

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: mssql-pvc
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 10Gi

---
apiVersion: v1
kind: Service
metadata:
  name: sqlserver-service
spec:
  type: ClusterIP   
  ports:
  - name: http
    port: 1433
    targetPort: 1433
  selector:
    app: sqlserver

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: rabbitmq
spec:
  replicas: 1
  selector:
    matchLabels:
      app: rabbitmq
  template:
    metadata:
      labels:
        app: rabbitmq
    spec:
      containers:
      - name: rabbitmq
        image: rabbitmq:latest
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 5672
        - containerPort: 15672
        env:
        - name: RABBITMQ_DEFAULT_USER
          value: "dotnetlab"
        - name: RABBITMQ_DEFAULT_PASS
          value: "P455w0rd_net"

---
apiVersion: v1
kind: Service
metadata:
  name: rabbitmq-service
spec:
  type: ClusterIP   
  ports:
  - name: amp 
    port: 5672
    targetPort: 5672
  - name: management
    port: 15672
    targetPort: 15672
  selector:
    app: rabbitmq

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: administrativoservice
spec:
  replicas: 1
  selector:
    matchLabels:
      app: administrativoservice
  template:
    metadata:
      labels:
        app: administrativoservice
    spec:
      containers:
      - name: administrativoservice
        image: administrativo:latest
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 80
        env:
        - name: ASPNETCORE_ENVIRONMENT
          value: "Development"

---
apiVersion: v1
kind: Service
metadata:
  name: administrativoservice-service
spec:
  type: ClusterIP   
  ports:
  - name: http
    port: 8080
    targetPort: 8080
  selector:
    app: administrativoservice

---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: administrativoservice-hpa
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: administrativoservice
  minReplicas: 3
  maxReplicas: 7
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 50

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: autenticacionservice
spec:
  replicas: 1
  selector:
    matchLabels:
      app: autenticacionservice
  template:
    metadata:
      labels:
        app: autenticacionservice
    spec:
      containers:
      - name: autenticacionservice
        image: autenticacion:latest
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 80
        env:
        - name: ASPNETCORE_ENVIRONMENT
          value: "Development"

---
apiVersion: v1
kind: Service
metadata:
  name: autenticacionservice-service
spec:
  type: ClusterIP   
  ports:
  - name: http
    port: 8080
    targetPort: 8080
  selector:
    app: autenticacionservice

---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: autenticacionservice-hpa
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: autenticacionservice
  minReplicas: 3
  maxReplicas: 7
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 50

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: gestioncitasservice
spec:
  replicas: 1
  selector:
    matchLabels:
      app: gestioncitasservice
  template:
    metadata:
      labels:
        app: gestioncitasservice
    spec:
      containers:
      - name: gestioncitasservice
        image: gestioncitas:latest
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 80
        env:
        - name: ASPNETCORE_ENVIRONMENT
          value: "Development"

---
apiVersion: v1
kind: Service
metadata:
  name: gestioncitasservice-service
spec:
  type: ClusterIP   
  ports:
  - name: http
    port: 8080
    targetPort: 8080
  selector:
    app: gestioncitasservice

---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: gestioncitasservice-hpa
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: gestioncitasservice
  minReplicas: 3
  maxReplicas: 7
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 50

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: historiasclinicaservice
spec:
  replicas: 1
  selector:
    matchLabels:
      app: historiasclinicaservice
  template:
    metadata:
      labels:
        app: historiasclinicaservice
    spec:
      containers:
      - name: historiasclinicaservice
        image: historiasclinicas:latest
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 80
        env:
        - name: ASPNETCORE_ENVIRONMENT
          value: "Development"

---
apiVersion: v1
kind: Service
metadata:
  name: historiasclinicaservice-service
spec:
  type: ClusterIP   
  ports:
  - name: http
    port: 8080
    targetPort: 8080
  selector:
    app: historiasclinicaservice

---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: historiasclinicaservice-hpa
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: historiasclinicaservice
  minReplicas: 3
  maxReplicas: 7
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 50

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: portalpacienteservice
spec:
  replicas: 1
  selector:
    matchLabels:
      app: portalpacienteservice
  template:
    metadata:
      labels:
        app: portalpacienteservice
    spec:
      containers:
      - name: portalpacienteservice
        image: portalpacientes:latest
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 80
        env:
        - name: ASPNETCORE_ENVIRONMENT
          value: "Development"

---
apiVersion: v1
kind: Service
metadata:
  name: portalpacienteservice-service
spec:
  type: ClusterIP   
  ports:
  - name: http
    port: 8080
    targetPort: 8080
  selector:
    app: portalpacienteservice

---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: portalpacienteservice-hpa
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: portalpacienteservice
  minReplicas: 3
  maxReplicas: 7
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 50

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: gestionusuariosservice
spec:
  replicas: 1
  selector:
    matchLabels:
      app: gestionusuariosservice
  template:
    metadata:
      labels:
        app: gestionusuariosservice
    spec:
      containers:
      - name: gestionusuariosservice
        image: gestionusuarios:latest
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 80
        env:
        - name: ASPNETCORE_ENVIRONMENT
          value: "Development"

---
apiVersion: v1
kind: Service
metadata:
  name: gestionusuariosservice-service
spec:
  type: ClusterIP   
  ports:
  - name: http
    port: 8080
    targetPort: 8080
  selector:
    app: gestionusuariosservice

---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: gestionusuariosservice-hpa
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: gestionusuariosservice
  minReplicas: 3
  maxReplicas: 7
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 50
